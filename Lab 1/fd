import java.io.*;
import java.util.*;

public class LexicalAnalysis {

    public static void main(String[] args) {
        String fileName = "input.java";

        try {
            BufferedReader reader = new BufferedReader(new FileReader(fileName));
            String line;
            ArrayList<String> keywordList = new ArrayList<>();
            ArrayList<String> identifierList = new ArrayList<>();
            ArrayList<String> stringLiteralList = new ArrayList<>();
            ArrayList<String> numberList = new ArrayList<>();
            ArrayList<String> otherList = new ArrayList<>();

            while ((line = reader.readLine()) != null) {
                analyzeLine(line, keywordList, identifierList, stringLiteralList, numberList, otherList);
            }

            reader.close();

            System.out.println("Keywords: " + keywordList);
            System.out.println("Identifiers: " + identifierList);
            System.out.println("String Literals: " + stringLiteralList);
            System.out.println("Numbers: " + numberList);
            System.out.println("Others: " + otherList);

        } catch (Exception e) {
            System.err.println("Error reading the file: " + e.getMessage());
            return;
        }
    }

    public static void analyzeLine(String line, ArrayList<String> keywordList,
                                   ArrayList<String> identifierList, ArrayList<String> stringLiteralList,
                                   ArrayList<String> numberList, ArrayList<String> otherList) {
        String[] words = line.strip().split(" ");
        String[] keywords = {
                "abstract", "assert", "boolean", "break", "byte", "case", "catch", "char",
                "class", "const", "continue", "default", "do", "double", "else", "enum",
                "extends", "final", "finally", "float", "for", "goto", "if", "implements",
                "import", "instanceof", "int", "interface", "long", "native", "new", "package",
                "private", "protected", "public", "return", "short", "static", "strictfp",
                "super", "switch", "synchronized", "this", "throw", "throws", "transient",
                "try", "void", "volatile", "while"
        };

        for (String word : words) {
            if (Arrays.asList(keywords).contains(word)) {
                keywordList.add(word);
                System.out.println("Keyword: " + word);
            } else if (isValidIdentifier(word)) {
                identifierList.add(word);
                System.out.println("Identifier: " + word);
            } else if (isStringLiteral(word)) {
                stringLiteralList.add(word);
                System.out.println("String Literal: " + word);
            } else if (isNumber(word)) {
                numberList.add(word);
                System.out.println("Number: " + word);
            } else {
                otherList.add(word);
                System.out.println("Other: " + word);
            }
        }
    }

    public static boolean isValidIdentifier(String word) {
        char firstChar = word.charAt(0);
        if (!Character.isLetter(firstChar) && firstChar != '_') {
            return false;
        } else{
            for (int i = 1; i < word.length(); i++) {
                char currentChar = word.charAt(i);
                if (!Character.isLetterOrDigit(currentChar) && currentChar != '_') {
                    return false;
                }
            }
            return true;
        }
    }

    public static boolean isStringLiteral(String word) {
        if (word.length() > 1 && word.charAt(0) == '"' && word.charAt(word.length() - 1) == '"') {
            return true;
        }
        return false;
    }

    public static boolean isNumber(String word) {
        try {
            Double.parseDouble(word);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
}
